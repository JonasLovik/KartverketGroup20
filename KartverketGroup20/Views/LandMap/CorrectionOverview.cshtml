@model List<KartverketGroup20.ViewModels.ReportViewModel>

    @{
        ViewData["Title"] = "Overview";
    }

<h2>Overview of Registered Corrections</h2>

@*  <table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>GeoJson</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var report in Model)
        {
            <tr>
                <td>@report.Id</td>
                <td>@report.GeoJson</td>
                <td>@report.Description</td>

            </tr>
        }
    </tbody>
</table> 
 *@
<div id="map" style="height: 400px;"></div>

@section Scripts {

    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <script>
        // Initialize the map and set its initial view
        var map = L.map('map').setView([0, 0], 2);  // Adjust the coordinates and zoom level as needed

        // Add a tile layer (using OpenStreetMap)
        L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
            attribution: 'Map data &copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        }).addTo(map);

        // Iterate over the registered changes and add them to the map
        // var changes = @Html.Raw(Json.Serialize(Model));
        var reports = @Json.Serialize(Model);

        reports.forEach(function (report) {
            // Parse the GeoJSON data and add it to the map
            var geoJsonData = JSON.parse(report.geoJson);
            L.geoJSON(geoJsonData).addTo(map);

            // Optionally, bind a popup with the change description
            var layer = L.geoJSON(geoJsonData).bindPopup(report.description);
            layer.addTo(map);
        });
    </script>
}